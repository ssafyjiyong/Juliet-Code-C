io_pair:
  exploits:
    - inputs:
        - stage_enum: 0
          stage: pre_process
          source: env_var_input
          ordinal: 1
          name: PALLONE_CANTABRI
          id: source
          source_enum: 2
          value_encoding: none
          value: 2 a
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
    - inputs:
        - source: env_var_input
          source_enum: 2
          id: source
          stage_enum: 0
          stage: pre_process
          value: 10 a b c
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          value_type_enum: 0
          ordinal: 1
          name: PALLONE_CANTABRI
  benigns:
    - inputs:
        - value_encoding: none
          ordinal: 1
          source: env_var_input
          source_enum: 2
          stage: pre_process
          id: source
          value: 1 foo
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          value_type_enum: 0
          name: PALLONE_CANTABRI
    - inputs:
        - value: 2 a b
          id: source
          value_encoding: none
          name: PALLONE_CANTABRI
          value_type_enum: 0
          source_enum: 2
          ordinal: 1
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          stage: pre_process
    - inputs:
        - ordinal: 1
          value_type: USE_TEXT_DIRECTLY
          source_enum: 2
          value: 3 alpha bravo charlie
          stage_enum: 0
          source: env_var_input
          name: PALLONE_CANTABRI
          stage: pre_process
          id: source
          value_type_enum: 0
          value_encoding: none
  base_inputs:
    - ordinal: 1
      name: PALLONE_CANTABRI
      source: env_var_input
      source_enum: 2
      stage: pre_process
      stage_enum: 0
      id: source
  description: "Read a space-delimited string from the input.  The first element in the string is the number of elements following it.  Then read in the following elements, and output them to stderr.  If there are fewer elements than expected, a seg fault occurs.\n\n"
code_complexity_features:
  - file_name: /tmp/tmpXKpqSw_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: get_xlate_handle_node_internal
    line_number: 0
    feature_group: source_taint
    feature: ENVIRONMENT_VARIABLE
  - file_name: /tmp/tmpXKpqSw_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: get_xlate_handle_node_internal
    line_number: 0
    feature_group: data_type
    feature: struct
  - file_name: /tmp/tmpXKpqSw_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: get_xlate_handle_node_internal
    line_number: 0
    feature_group: data_flow
    feature: index_alias_50
  - feature_group: control_flow
    feature: macros
    file_name: /tmp/tmpXKpqSw_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: get_xlate_handle_node_internal
    line_number: 0
description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"