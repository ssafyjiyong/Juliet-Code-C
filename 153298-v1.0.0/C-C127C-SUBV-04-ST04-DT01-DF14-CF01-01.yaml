code_complexity_features:
  - file_name: /tmp/tmp5KiLHe_ss_testcase/src-rose/subversion/libsvn_subr/stream.c
    feature_group: control_flow
    function_name: svn_stream_set_close
    line_number: 0
    feature: callback
  - feature_group: source_taint
    file_name: /tmp/tmp5KiLHe_ss_testcase/src-rose/subversion/libsvn_subr/stream.c
    function_name: crittur_blindedly
    line_number: 0
    feature: SHARED_MEMORY
  - file_name: /tmp/tmp5KiLHe_ss_testcase/src-rose/subversion/libsvn_subr/stream.c
    function_name: friscal_saucer
    line_number: 0
    feature_group: data_flow
    feature: address_as_nonlinear_expression
  - line_number: 0
    feature_group: data_type
    feature: array
    file_name: /tmp/tmp5KiLHe_ss_testcase/src-rose/subversion/libsvn_subr/stream.c
    function_name: friscal_saucer
description: "Creating test case using base program.\nAdded an environment variable read to get a key in order to read in data from shared memory.\nCompleted injection.\n"
io_pair:
  base_inputs:
    - stage: pre_process
      source: shared_memory_input
      source_enum: 6
      stage_enum: 0
      id: source
      ordinal: 1
      key: 9455
      size: 105
      flags: 950
  benigns:
    - inputs:
        - source: shared_memory_input
          key: 9455
          source_enum: 6
          id: source
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          value_encoding: none
          flags: 950
          size: 105
          stage: pre_process
          stage_enum: 0
          ordinal: 1
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
        - source_enum: 2
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          source: env_var_input
          ordinal: 2
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type_enum: 0
          stage_enum: 0
          stage: pre_process
          name: INPUT_STRING
    - inputs:
        - stage_enum: 0
          stage: pre_process
          ordinal: 1
          id: source
          value_type_enum: 0
          source: shared_memory_input
          source_enum: 6
          key: 9455
          size: 105
          flags: 950
          value: This is probably not going to overflow a buffer of some sort.  Let's run it anyway and see what happens.
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
        - value_type_enum: 0
          stage_enum: 0
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          name: INPUT_STRING
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          ordinal: 2
          source: env_var_input
          source_enum: 2
          stage: pre_process
    - inputs:
        - value_type: USE_TEXT_DIRECTLY
          flags: 950
          id: source
          key: 9455
          stage_enum: 0
          ordinal: 1
          value_type_enum: 0
          source: shared_memory_input
          source_enum: 6
          value_encoding: none
          size: 105
          value: As long as this statement has more than 64 characters, then nothing bad should happen
          stage: pre_process
        - value_type: USE_TEXT_DIRECTLY
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_type_enum: 0
          value_encoding: none
          source: env_var_input
          stage_enum: 0
          source_enum: 2
          name: INPUT_STRING
          ordinal: 2
          stage: pre_process
  exploits:
    - inputs:
        - value_encoding: base64
          stage: pre_process
          flags: 950
          size: 105
          source_enum: 6
          source: shared_memory_input
          id: source
          stage_enum: 0
          key: 9455
          value_type: USE_TEXT_DIRECTLY
          value: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGugIE=
          ordinal: 1
          value_type_enum: 0
        - source: env_var_input
          source_enum: 2
          name: INPUT_STRING
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          stage: pre_process
          ordinal: 2
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          stage_enum: 0
          value_type_enum: 0
    - inputs:
        - id: source
          ordinal: 1
          value_type_enum: 0
          stage: pre_process
          flags: 950
          source_enum: 6
          source: shared_memory_input
          stage_enum: 0
          key: 9455
          value: SGVsbKUgV6lybGSI
          size: 105
          value_encoding: base64
          value_type: USE_TEXT_DIRECTLY
        - value_type: USE_TEXT_DIRECTLY
          ordinal: 2
          stage_enum: 0
          source_enum: 2
          source: env_var_input
          stage: pre_process
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          name: INPUT_STRING
          value_type_enum: 0
          value_encoding: none
  description: "Has a heap buffer of size 128 within a struct.  reads in an ascii string from an environmentvariable and increments the corresponding values in the heap buffer.  Then reads in an input and prints out the count of the characters from the heap buff of those in the input.  If input contains extended ascii characters, they will be wrapped around to negative values and the buffer will be under read\n\n"