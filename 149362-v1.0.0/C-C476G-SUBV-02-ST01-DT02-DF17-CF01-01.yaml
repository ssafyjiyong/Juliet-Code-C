io_pair:
  benigns:
    - inputs:
        - source_enum: 2
          name: GRANCH_MUCKIER
          source: env_var_input
          value_type_enum: 0
          ordinal: 1
          value_encoding: none
          stage: pre_process
          stage_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value: brah
          id: source
    - inputs:
        - value_type: USE_TEXT_DIRECTLY
          source_enum: 2
          value: dude
          stage_enum: 0
          stage: pre_process
          name: GRANCH_MUCKIER
          ordinal: 1
          id: source
          value_encoding: none
          source: env_var_input
          value_type_enum: 0
    - inputs:
        - id: source
          name: GRANCH_MUCKIER
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          source: env_var_input
          source_enum: 2
          value: bromigo
          stage: pre_process
          value_encoding: none
          ordinal: 1
          stage_enum: 0
  description: "Good inputs: 1) taintvar is less than 64 characters long.Bad input: 1) taintvar is greater than or equal to 64 characters long.\n\n"
  base_inputs:
    - source: env_var_input
      stage_enum: 0
      ordinal: 1
      stage: pre_process
      source_enum: 2
      id: source
      name: GRANCH_MUCKIER
  exploits:
    - inputs:
        - id: source
          stage_enum: 0
          source: env_var_input
          value_type_enum: 0
          ordinal: 1
          name: GRANCH_MUCKIER
          value_type: USE_TEXT_DIRECTLY
          source_enum: 2
          stage: pre_process
          value_encoding: base64
          value: TmFoIG5haCBuYWggbmFoIG5haCBuYWgsIG5haCBuYWggbmFoLCBoZXkgSnVkZQpOYWggbmFoIG5haCBuYWggbmFoIG5haCwgbmFoIG5haCBuYWgsIGhleSBKdWRl
    - inputs:
        - value: this string is more than sixty four characters long, so it should mess some stuff up
          name: GRANCH_MUCKIER
          value_encoding: none
          id: source
          source_enum: 2
          stage: pre_process
          value_type_enum: 0
          source: env_var_input
          stage_enum: 0
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"
code_complexity_features:
  - function_name: svn_mutex__unlock
    feature: callback
    line_number: 0
    file_name: /tmp/tmpukC0Un_ss_testcase/src-rose/subversion/libsvn_subr/mutex.c
    feature_group: control_flow
  - feature: ENVIRONMENT_VARIABLE
    file_name: /tmp/tmpukC0Un_ss_testcase/src-rose/subversion/libsvn_subr/mutex.c
    function_name: camerlingos_strang
    line_number: 0
    feature_group: source_taint
  - file_name: /tmp/tmpukC0Un_ss_testcase/src-rose/subversion/libsvn_subr/mutex.c
    function_name: camerlingos_strang
    feature: simple
    line_number: 0
    feature_group: data_type
  - file_name: /tmp/tmpukC0Un_ss_testcase/src-rose/subversion/libsvn_subr/mutex.c
    feature_group: data_flow
    function_name: subparallel_perigone
    line_number: 0
    feature: buffer_address_array_index