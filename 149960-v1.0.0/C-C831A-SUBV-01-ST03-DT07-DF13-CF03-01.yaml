io_pair:
  exploits:
    - inputs:
        - stage_enum: 1
          source_enum: 5
          stage: co_process
          id: source
          value_encoding: none
          source: socket_input
          value: /opt/stonesoup/workspace/testData/fifo1 /opt/stonesoup/workspace/testData/fifo2 I_do_not_even_what?
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          port: 8887
          address: ss-localhost
          value_type_enum: 0
        - stage: pre_process
          stage_enum: 0
          id: background-complex
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then PROC_ID=\"${NEW_FILE%.pid}\"; echo \"Signaling: \" \"${PROC_ID}\" && sleep 1 && kill -s 10 \"${PROC_ID}\" && echo \"Signaled (10).  Sleeping...\" && sleep 1 && kill -s 12 \"${PROC_ID}\" && echo \"Signaled (12).\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          ordinal: 2
          source: script_input
          source_enum: 7
        - id: background
          stage_enum: 0
          stage: pre_process
          source: script_input
          source_enum: 7
          ordinal: 3
          name: runFifos.py /opt/stonesoup/workspace/testData/fifo1 /opt/stonesoup/workspace/testData/fifo2 --nosync
    - inputs:
        - stage: co_process
          address: ss-localhost
          port: 8887
          value: /opt/stonesoup/workspace/testData/fifo1 /opt/stonesoup/workspace/testData/fifo2 Yes,_ma'am!
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 1
          id: source
          source_enum: 5
          value_type_enum: 0
          source: socket_input
          ordinal: 1
        - stage: pre_process
          source: script_input
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then PROC_ID=\"${NEW_FILE%.pid}\"; echo \"Signaling: \" \"${PROC_ID}\" && sleep 1 && kill -s 10 \"${PROC_ID}\" && echo \"Signaled (10).  Sleeping...\" && sleep 1 && kill -s 12 \"${PROC_ID}\" && echo \"Signaled (12).\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          stage_enum: 0
          source_enum: 7
          id: background-complex
          ordinal: 2
        - source_enum: 7
          stage_enum: 0
          id: background
          name: runFifos.py /opt/stonesoup/workspace/testData/fifo1 /opt/stonesoup/workspace/testData/fifo2 --nosync
          source: script_input
          ordinal: 3
          stage: pre_process
  base_inputs:
    - source: socket_input
      source_enum: 5
      stage: co_process
      stage_enum: 1
      id: source
      ordinal: 1
      address: ss-localhost
      port: 8887
  description: "This weakness expects a string in the form: '<file1> <file2> <data>' where file1 and file2 are files that are used to delay execution, and data is a string containing no spaces.  A non-rentrant signal handler is registered to multiple signals for certian inputs, causing a double free if invoked multiple times in rapid succession. In order to hit the weakness, file1 and file2 must be controlled by runFifo.py (file1 file2), and the data string must begin with a capital letter. In addition a signal must be sent to the process after it creates a file testData/*.pid.\n\n"
  benigns:
    - inputs:
        - source: socket_input
          source_enum: 5
          id: source
          value_encoding: none
          stage_enum: 1
          ordinal: 1
          address: ss-localhost
          value_type: USE_TEXT_DIRECTLY
          port: 8887
          value: /opt/stonesoup/workspace/testData/file1 /opt/stonesoup/workspace/testData/file2 ffddssaa448
          value_type_enum: 0
          stage: co_process
        - source_enum: 7
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then PROC_ID=\"${NEW_FILE%.pid}\"; echo \"Signaling: \" \"${PROC_ID}\" && sleep 1 && kill -s 10 \"${PROC_ID}\" && echo \"Signaled (10).  Sleeping...\" && sleep 1 && kill -s 12 \"${PROC_ID}\" && echo \"Signaled (12).\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          ordinal: 2
          id: background-complex
          stage: pre_process
          stage_enum: 0
          source: script_input
        - name: /opt/stonesoup/workspace/testData/file1
          source: file_content_input
          source_enum: 3
          ordinal: 3
          stage: pre_process
          stage_enum: 0
        - ordinal: 4
          name: /opt/stonesoup/workspace/testData/file2
          source_enum: 3
          stage: pre_process
          stage_enum: 0
          source: file_content_input
    - inputs:
        - address: ss-localhost
          ordinal: 1
          value_type: USE_TEXT_DIRECTLY
          source: socket_input
          source_enum: 5
          stage: co_process
          stage_enum: 1
          id: source
          port: 8887
          value: /opt/stonesoup/workspace/testData/file1 /opt/stonesoup/workspace/testData/file2 77dasd
          value_encoding: none
          value_type_enum: 0
        - stage_enum: 0
          stage: pre_process
          id: background-complex
          source_enum: 7
          source: script_input
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then PROC_ID=\"${NEW_FILE%.pid}\"; echo \"Signaling: \" \"${PROC_ID}\" && sleep 1 && kill -s 10 \"${PROC_ID}\" && echo \"Signaled (10).  Sleeping...\" && sleep 1 && kill -s 12 \"${PROC_ID}\" && echo \"Signaled (12).\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          ordinal: 2
        - stage: pre_process
          source_enum: 3
          name: /opt/stonesoup/workspace/testData/file1
          stage_enum: 0
          source: file_content_input
          ordinal: 3
        - stage_enum: 0
          source: file_content_input
          source_enum: 3
          stage: pre_process
          ordinal: 4
          name: /opt/stonesoup/workspace/testData/file2
    - inputs:
        - value_type_enum: 0
          source: socket_input
          source_enum: 5
          stage: co_process
          stage_enum: 1
          id: source
          value: /opt/stonesoup/workspace/testData/file1 /opt/stonesoup/workspace/testData/file2 What_do_we_have_here?
          ordinal: 1
          address: ss-localhost
          port: 8887
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
        - id: background-complex
          ordinal: 2
          stage_enum: 0
          source: script_input
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then PROC_ID=\"${NEW_FILE%.pid}\"; echo \"Signaling: \" \"${PROC_ID}\" && sleep 1 && kill -s 10 \"${PROC_ID}\" && echo \"Signaled (10).  Sleeping...\" && sleep 1 && kill -s 12 \"${PROC_ID}\" && echo \"Signaled (12).\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          source_enum: 7
          stage: pre_process
        - stage_enum: 0
          name: /opt/stonesoup/workspace/testData/file1
          source: file_content_input
          stage: pre_process
          ordinal: 3
          source_enum: 3
        - stage: pre_process
          source_enum: 3
          stage_enum: 0
          source: file_content_input
          ordinal: 4
          name: /opt/stonesoup/workspace/testData/file2
code_complexity_features:
  - file_name: /tmp/tmpaacSen_ss_testcase/src-rose/subversion/libsvn_subr/dirent_uri.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: source_taint
    feature: SOCKET
  - file_name: /tmp/tmpaacSen_ss_testcase/src-rose/subversion/libsvn_subr/dirent_uri.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_type
    feature: union
  - file_name: /tmp/tmpaacSen_ss_testcase/src-rose/subversion/libsvn_subr/dirent_uri.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_flow
    feature: address_as_linear_expression
  - file_name: /tmp/tmpaacSen_ss_testcase/src-rose/subversion/libsvn_subr/dirent_uri.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: control_flow
    feature: infinite_loop
description: "Creating test case using base program.\nAdded a Socket Server to accept communication from untrusted source.\nCompleted injection.\n"