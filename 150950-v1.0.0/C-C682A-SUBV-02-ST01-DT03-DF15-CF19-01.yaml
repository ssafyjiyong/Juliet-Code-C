description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"
code_complexity_features:
  - line_number: 0
    feature: ENVIRONMENT_VARIABLE
    function_name: svn_mutex__unlock
    feature_group: source_taint
    file_name: /tmp/tmp87YKA2_ss_testcase/src-rose/subversion/libsvn_subr/mutex.c
  - feature: void_pointer
    file_name: /tmp/tmp87YKA2_ss_testcase/src-rose/subversion/libsvn_subr/mutex.c
    line_number: 0
    function_name: svn_mutex__unlock
    feature_group: data_type
  - feature: address_as_variable
    feature_group: data_flow
    line_number: 0
    function_name: svn_mutex__unlock
    file_name: /tmp/tmp87YKA2_ss_testcase/src-rose/subversion/libsvn_subr/mutex.c
  - line_number: 0
    file_name: /tmp/tmp87YKA2_ss_testcase/src-rose/subversion/libsvn_subr/mutex.c
    feature: recursive
    function_name: svn_mutex__unlock
    feature_group: control_flow
io_pair:
  benigns:
    - inputs:
        - id: source
          source: env_var_input
          value_encoding: none
          stage: pre_process
          name: LAMBERT_OSCNODE
          ordinal: 1
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value: 10
          source_enum: 2
          stage_enum: 0
    - inputs:
        - stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          source_enum: 2
          value_encoding: none
          id: source
          name: LAMBERT_OSCNODE
          value_type_enum: 0
          value: 0
          source: env_var_input
          stage_enum: 0
    - inputs:
        - value: FFFF
          value_encoding: none
          ordinal: 1
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          name: LAMBERT_OSCNODE
          value_type_enum: 0
          source_enum: 2
          stage_enum: 0
          id: source
  base_inputs:
    - source: env_var_input
      stage: pre_process
      stage_enum: 0
      ordinal: 1
      name: LAMBERT_OSCNODE
      id: source
      source_enum: 2
  exploits:
    - inputs:
        - source_enum: 2
          name: LAMBERT_OSCNODE
          id: source
          stage: pre_process
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          value_type_enum: 0
          stage_enum: 0
          ordinal: 1
          value: 10000
    - inputs:
        - value: FFFFFF
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          source_enum: 2
          stage_enum: 0
          stage: pre_process
          ordinal: 1
          source: env_var_input
          value_type_enum: 0
          name: LAMBERT_OSCNODE
          id: source
  description: "Read a hex integer from the input.  If hexinteger is negative, ignore.  If hexinteger < 0x0000FFFF, do nothing.  If hexinteger >= 0x0000FFFF try to zero-out the upper two bytes using char pointers.  Perform an incorrect calculation, and rather than zero-ing out the upper two bytes, zero out two different bytes, which corrupts pointers on the stack and results in a seg fault.\n\n"