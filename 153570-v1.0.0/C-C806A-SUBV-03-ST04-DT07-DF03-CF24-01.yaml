io_pair:
  description: "Has a buffer declared on the stack. char[64] If input is shorter than 64 it will overflow,due to using improper sizeof and strlen checking\n\n"
  base_inputs:
    - flags: 950
      source: shared_memory_input
      source_enum: 6
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      key: 3851
      size: 91
  benigns:
    - inputs:
        - size: 91
          value_encoding: none
          value_type_enum: 0
          source: shared_memory_input
          value_type: USE_TEXT_DIRECTLY
          id: source
          source_enum: 6
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAAAAAAAAAAAAA
          ordinal: 1
          flags: 950
          stage: pre_process
          stage_enum: 0
          key: 3851
    - inputs:
        - source: shared_memory_input
          value: Hello World!  If this statement isn't more than 64 characters, it will go badly
          value_type_enum: 0
          stage_enum: 0
          ordinal: 1
          value_type: USE_TEXT_DIRECTLY
          flags: 950
          stage: pre_process
          source_enum: 6
          value_encoding: none
          key: 3851
          size: 91
          id: source
    - inputs:
        - flags: 950
          source_enum: 6
          source: shared_memory_input
          id: source
          size: 91
          ordinal: 1
          value: Short is good for buffer overflows, unless you make a mistake and get it wrong
          stage_enum: 0
          stage: pre_process
          key: 3851
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          value_type_enum: 0
  exploits:
    - inputs:
        - value_type_enum: 0
          id: source
          source: shared_memory_input
          key: 3851
          ordinal: 1
          source_enum: 6
          stage: pre_process
          flags: 950
          stage_enum: 0
          size: 91
          value: Short is now bad
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
    - inputs:
        - source: shared_memory_input
          flags: 950
          size: 91
          source_enum: 6
          value_type: USE_TEXT_DIRECTLY
          value: AAAAAAAAAAAA
          stage_enum: 0
          ordinal: 1
          stage: pre_process
          id: source
          key: 3851
          value_encoding: none
          value_type_enum: 0
code_complexity_features:
  - function_name: get_xlate_handle_node_internal
    line_number: 0
    feature_group: source_taint
    feature: SHARED_MEMORY
    file_name: /tmp/tmp_Jo2TU_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
  - line_number: 0
    feature_group: data_type
    feature: union
    function_name: get_xlate_handle_node_internal
    file_name: /tmp/tmp_Jo2TU_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
  - file_name: /tmp/tmp_Jo2TU_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: get_xlate_handle_node_internal
    line_number: 0
    feature_group: data_flow
    feature: address_alias_10
  - file_name: /tmp/tmp_Jo2TU_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: get_xlate_handle_node_internal
    line_number: 0
    feature_group: control_flow
    feature: unconditional_jump
description: "Creating test case using base program.\nAdded an environment variable read to get a key in order to read in data from shared memory.\nCompleted injection.\n"