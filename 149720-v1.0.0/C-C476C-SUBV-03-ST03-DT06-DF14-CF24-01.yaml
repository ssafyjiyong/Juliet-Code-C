io_pair:
  exploits:
    - inputs:
        - value_type_enum: 0
          stage: co_process
          port: 8887
          address: ss-localhost
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          stage_enum: 1
          source_enum: 5
          id: source
          source: socket_input
          value: 2 a
          value_encoding: none
    - inputs:
        - port: 8887
          stage: co_process
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          source: socket_input
          id: source
          source_enum: 5
          address: ss-localhost
          stage_enum: 1
          ordinal: 1
          value: 10 a b c
  benigns:
    - inputs:
        - id: source
          source: socket_input
          source_enum: 5
          stage_enum: 1
          ordinal: 1
          stage: co_process
          address: ss-localhost
          value_type_enum: 0
          value: 1 foo
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          port: 8887
    - inputs:
        - value_encoding: none
          port: 8887
          address: ss-localhost
          value_type_enum: 0
          value: 2 a b
          source: socket_input
          value_type: USE_TEXT_DIRECTLY
          source_enum: 5
          stage: co_process
          id: source
          ordinal: 1
          stage_enum: 1
    - inputs:
        - port: 8887
          source_enum: 5
          source: socket_input
          stage_enum: 1
          stage: co_process
          value_encoding: none
          value: 3 alpha bravo charlie
          value_type_enum: 0
          ordinal: 1
          address: ss-localhost
          value_type: USE_TEXT_DIRECTLY
          id: source
  description: "Read a space-delimited string from the input.  The first element in the string is the number of elements following it.  Then read in the following elements, and output them to stderr.  If there are fewer elements than expected, a seg fault occurs.\n\n"
  base_inputs:
    - source: socket_input
      source_enum: 5
      stage: co_process
      stage_enum: 1
      id: source
      ordinal: 1
      address: ss-localhost
      port: 8887
code_complexity_features:
  - file_name: /tmp/tmpE9F15S_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: source_taint
    feature: SOCKET
  - function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_type
    feature: typedef
    file_name: /tmp/tmpE9F15S_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
  - file_name: /tmp/tmpE9F15S_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature: address_as_nonlinear_expression
    feature_group: data_flow
  - function_name: stonesoup_handle_taint
    line_number: 0
    feature: unconditional_jump
    feature_group: control_flow
    file_name: /tmp/tmpE9F15S_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
description: "Creating test case using base program.\nAdded a Socket Server to accept communication from untrusted source.\nCompleted injection.\n"