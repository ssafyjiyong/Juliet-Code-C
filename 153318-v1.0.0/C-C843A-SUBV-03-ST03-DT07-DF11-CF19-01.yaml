io_pair:
  description: "Creates a union that can be either an int or a char *.\n  If input is a non-zero number, set union to that number, else set union to the input string.\n  Try to access the union as a string, regardless of how it is set.\nSeg fault if the input is a non-zero number.\n\n"
  base_inputs:
    - stage: co_process
      stage_enum: 1
      id: source
      ordinal: 1
      address: ss-localhost
      port: 8887
      source: socket_input
      source_enum: 5
  benigns:
    - inputs:
        - value_type_enum: 0
          port: 8887
          stage_enum: 1
          id: source
          value_type: USE_TEXT_DIRECTLY
          address: ss-localhost
          ordinal: 1
          stage: co_process
          source: socket_input
          source_enum: 5
          value_encoding: none
          value: AAA
    - inputs:
        - stage: co_process
          id: source
          stage_enum: 1
          address: ss-localhost
          source: socket_input
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          value_type_enum: 0
          ordinal: 1
          value: This is not a number
          source_enum: 5
          port: 8887
    - inputs:
        - value_encoding: none
          id: source
          stage_enum: 1
          address: ss-localhost
          stage: co_process
          value: not a number not a number not a number
          port: 8887
          value_type_enum: 0
          source: socket_input
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          source_enum: 5
  exploits:
    - inputs:
        - stage: co_process
          value_type: USE_TEXT_DIRECTLY
          address: ss-localhost
          ordinal: 1
          id: source
          stage_enum: 1
          port: 8887
          value_type_enum: 0
          value_encoding: none
          source: socket_input
          source_enum: 5
          value: 012
    - inputs:
        - address: ss-localhost
          port: 8887
          stage: co_process
          id: source
          stage_enum: 1
          source: socket_input
          ordinal: 1
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value: 40000
          source_enum: 5
          value_encoding: none
description: "Creating test case using base program.\nAdded a Socket Server to accept communication from untrusted source.\nCompleted injection.\n"
code_complexity_features:
  - file_name: /tmp/tmpQuQz5z_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    line_number: 0
    function_name: stonesoup_handle_taint
    feature_group: source_taint
    feature: SOCKET
  - feature_group: data_type
    feature: union
    file_name: /tmp/tmpQuQz5z_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: stonesoup_handle_taint
    line_number: 0
  - file_name: /tmp/tmpQuQz5z_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_flow
    feature: basic
  - file_name: /tmp/tmpQuQz5z_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: control_flow
    feature: recursive