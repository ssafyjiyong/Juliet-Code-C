io_pair:
  description: "Has a stack buffer of size 128.  reads in an ascii string from an environmentvariable and increments the corresponding values in the stack buffer.  Then reads in an input and prints out the count of the characters from the stack buff of those in the input.  If input contains extended ascii characters, they will be wrapped around to negative values and the buffer will be under read\n\n"
  exploits:
    - inputs:
        - value_encoding: base64
          ordinal: 1
          value: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUGugIE=
          stage_enum: 1
          id: source
          port: 8887
          value_type: USE_TEXT_DIRECTLY
          source: socket_input
          value_type_enum: 0
          address: ss-localhost
          stage: co_process
          source_enum: 5
        - value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          value_encoding: none
          stage_enum: 0
          source: env_var_input
          value_type_enum: 0
          name: INPUT_STRING
          ordinal: 2
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          source_enum: 2
    - inputs:
        - value_type: USE_TEXT_DIRECTLY
          source: socket_input
          stage_enum: 1
          port: 8887
          id: source
          address: ss-localhost
          ordinal: 1
          value: SGVsbKUgV6lybGSI
          value_encoding: base64
          source_enum: 5
          stage: co_process
          value_type_enum: 0
        - ordinal: 2
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          stage_enum: 0
          name: INPUT_STRING
          value_type_enum: 0
          value_encoding: none
          source_enum: 2
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
  benigns:
    - inputs:
        - address: ss-localhost
          value_type_enum: 0
          ordinal: 1
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          source: socket_input
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          port: 8887
          id: source
          stage: co_process
          source_enum: 5
          stage_enum: 1
        - name: INPUT_STRING
          source_enum: 2
          stage_enum: 0
          ordinal: 2
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          source: env_var_input
          value_encoding: none
    - inputs:
        - source: socket_input
          port: 8887
          value_type: USE_TEXT_DIRECTLY
          id: source
          value_encoding: none
          address: ss-localhost
          stage: co_process
          value: This is probably not going to overflow a buffer of some sort.  Let's run it anyway and see what happens.
          stage_enum: 1
          ordinal: 1
          source_enum: 5
          value_type_enum: 0
        - stage: pre_process
          source: env_var_input
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          ordinal: 2
          source_enum: 2
          name: INPUT_STRING
          value_type_enum: 0
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
    - inputs:
        - ordinal: 1
          value_encoding: none
          port: 8887
          address: ss-localhost
          stage: co_process
          value: As long as this statement has more than 64 characters, then nothing bad should happen
          source: socket_input
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          stage_enum: 1
          id: source
          source_enum: 5
        - stage_enum: 0
          stage: pre_process
          source_enum: 2
          source: env_var_input
          value_type_enum: 0
          value: AAAABVVCUYEOAISDHGUEHGU:WOJOQIUFGUYGBJdjsafihuegakdlfm9238946665232kmemiucyds78fy2
          ordinal: 2
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          name: INPUT_STRING
  base_inputs:
    - address: ss-localhost
      id: source
      stage: co_process
      source_enum: 5
      ordinal: 1
      stage_enum: 1
      port: 8887
      source: socket_input
description: "Creating test case using base program.\nAdded a Socket Server to accept communication from untrusted source.\nCompleted injection.\n"
code_complexity_features:
  - feature_group: source_taint
    feature: SOCKET
    line_number: 0
    file_name: /tmp/tmprvml6i_ss_testcase/src-rose/subversion/libsvn_subr/mutex.c
    function_name: stonesoup_handle_taint
  - line_number: 0
    function_name: stonesoup_handle_taint
    feature: union
    feature_group: data_type
    file_name: /tmp/tmprvml6i_ss_testcase/src-rose/subversion/libsvn_subr/mutex.c
  - feature_group: data_flow
    feature: address_as_nonlinear_expression
    line_number: 0
    function_name: stonesoup_handle_taint
    file_name: /tmp/tmprvml6i_ss_testcase/src-rose/subversion/libsvn_subr/mutex.c
  - feature_group: control_flow
    file_name: /tmp/tmprvml6i_ss_testcase/src-rose/subversion/libsvn_subr/mutex.c
    line_number: 0
    feature: set_jump_long_jump
    function_name: stonesoup_handle_taint