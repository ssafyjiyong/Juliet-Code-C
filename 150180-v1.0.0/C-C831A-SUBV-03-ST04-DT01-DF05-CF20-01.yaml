code_complexity_features:
  - line_number: 0
    feature_group: source_taint
    feature: SHARED_MEMORY
    function_name: get_xlate_handle_node_internal
    file_name: /tmp/tmpNnfqBa_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
  - file_name: /tmp/tmpNnfqBa_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: get_xlate_handle_node_internal
    line_number: 0
    feature_group: data_type
    feature: array
  - file_name: /tmp/tmpNnfqBa_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: get_xlate_handle_node_internal
    line_number: 0
    feature_group: data_flow
    feature: address_as_constant
  - file_name: /tmp/tmpNnfqBa_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: ingeminated_snakelike
    feature_group: control_flow
    line_number: 0
    feature: sequence
description: "Creating test case using base program.\nAdded an environment variable read to get a key in order to read in data from shared memory.\nCompleted injection.\n"
io_pair:
  base_inputs:
    - source: shared_memory_input
      source_enum: 6
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      key: 9792
      size: 102
      flags: 950
  benigns:
    - inputs:
        - key: 9792
          source_enum: 6
          stage_enum: 0
          id: source
          size: 102
          ordinal: 1
          flags: 950
          value: /opt/stonesoup/workspace/testData/file1 /opt/stonesoup/workspace/testData/file2 ffddssaa448
          value_encoding: none
          source: shared_memory_input
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
        - stage_enum: 0
          id: background-complex
          source: script_input
          stage: pre_process
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then PROC_ID=\"${NEW_FILE%.pid}\"; echo \"Signaling: \" \"${PROC_ID}\" && sleep 1 && kill -s 10 \"${PROC_ID}\" && echo \"Signaled (10).  Sleeping...\" && sleep 1 && kill -s 12 \"${PROC_ID}\" && echo \"Signaled (12).\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          source_enum: 7
          ordinal: 2
        - stage_enum: 0
          name: /opt/stonesoup/workspace/testData/file1
          stage: pre_process
          source_enum: 3
          source: file_content_input
          ordinal: 3
        - source: file_content_input
          stage_enum: 0
          stage: pre_process
          ordinal: 4
          source_enum: 3
          name: /opt/stonesoup/workspace/testData/file2
    - inputs:
        - stage_enum: 0
          stage: pre_process
          id: source
          flags: 950
          key: 9792
          size: 102
          value: /opt/stonesoup/workspace/testData/file1 /opt/stonesoup/workspace/testData/file2 77dasd
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          source: shared_memory_input
          value_type_enum: 0
          source_enum: 6
          ordinal: 1
        - ordinal: 2
          source: script_input
          stage: pre_process
          source_enum: 7
          id: background-complex
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then PROC_ID=\"${NEW_FILE%.pid}\"; echo \"Signaling: \" \"${PROC_ID}\" && sleep 1 && kill -s 10 \"${PROC_ID}\" && echo \"Signaled (10).  Sleeping...\" && sleep 1 && kill -s 12 \"${PROC_ID}\" && echo \"Signaled (12).\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          stage_enum: 0
        - source_enum: 3
          source: file_content_input
          name: /opt/stonesoup/workspace/testData/file1
          stage_enum: 0
          stage: pre_process
          ordinal: 3
        - ordinal: 4
          source: file_content_input
          name: /opt/stonesoup/workspace/testData/file2
          stage_enum: 0
          stage: pre_process
          source_enum: 3
    - inputs:
        - value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          source: shared_memory_input
          source_enum: 6
          stage: pre_process
          value_encoding: none
          stage_enum: 0
          id: source
          ordinal: 1
          key: 9792
          size: 102
          flags: 950
          value: /opt/stonesoup/workspace/testData/file1 /opt/stonesoup/workspace/testData/file2 What_do_we_have_here?
        - source: script_input
          stage_enum: 0
          id: background-complex
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then PROC_ID=\"${NEW_FILE%.pid}\"; echo \"Signaling: \" \"${PROC_ID}\" && sleep 1 && kill -s 10 \"${PROC_ID}\" && echo \"Signaled (10).  Sleeping...\" && sleep 1 && kill -s 12 \"${PROC_ID}\" && echo \"Signaled (12).\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          source_enum: 7
          ordinal: 2
          stage: pre_process
        - source_enum: 3
          name: /opt/stonesoup/workspace/testData/file1
          stage: pre_process
          ordinal: 3
          stage_enum: 0
          source: file_content_input
        - stage_enum: 0
          name: /opt/stonesoup/workspace/testData/file2
          stage: pre_process
          ordinal: 4
          source: file_content_input
          source_enum: 3
  exploits:
    - inputs:
        - size: 102
          id: source
          flags: 950
          key: 9792
          source: shared_memory_input
          value: /opt/stonesoup/workspace/testData/fifo1 /opt/stonesoup/workspace/testData/fifo2 I_do_not_even_what?
          source_enum: 6
          value_encoding: none
          stage: pre_process
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          value_type_enum: 0
          stage_enum: 0
        - stage_enum: 0
          source_enum: 7
          id: background-complex
          stage: pre_process
          ordinal: 2
          source: script_input
          name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then PROC_ID=\"${NEW_FILE%.pid}\"; echo \"Signaling: \" \"${PROC_ID}\" && sleep 1 && kill -s 10 \"${PROC_ID}\" && echo \"Signaled (10).  Sleeping...\" && sleep 1 && kill -s 12 \"${PROC_ID}\" && echo \"Signaled (12).\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
        - source_enum: 7
          ordinal: 3
          name: runFifos.py /opt/stonesoup/workspace/testData/fifo1 /opt/stonesoup/workspace/testData/fifo2 --nosync
          stage: pre_process
          source: script_input
          id: background
          stage_enum: 0
    - inputs:
        - stage: pre_process
          stage_enum: 0
          value_encoding: none
          size: 102
          source: shared_memory_input
          value_type: USE_TEXT_DIRECTLY
          source_enum: 6
          value_type_enum: 0
          ordinal: 1
          key: 9792
          flags: 950
          id: source
          value: /opt/stonesoup/workspace/testData/fifo1 /opt/stonesoup/workspace/testData/fifo2 Yes,_ma'am!
        - name: !<!> "inotifywait -m -e create --format \"%f\" /opt/stonesoup/workspace/testData/ | while read NEW_FILE; do if [[ \"${NEW_FILE}\" == *.pid ]]; then PROC_ID=\"${NEW_FILE%.pid}\"; echo \"Signaling: \" \"${PROC_ID}\" && sleep 1 && kill -s 10 \"${PROC_ID}\" && echo \"Signaled (10).  Sleeping...\" && sleep 1 && kill -s 12 \"${PROC_ID}\" && echo \"Signaled (12).\"; else echo \"Ignoring: \" \"/opt/stonesoup/workspace/testData/${NEW_FILE}\"; fi; done;"
          source: script_input
          ordinal: 2
          stage_enum: 0
          source_enum: 7
          stage: pre_process
          id: background-complex
        - name: runFifos.py /opt/stonesoup/workspace/testData/fifo1 /opt/stonesoup/workspace/testData/fifo2 --nosync
          stage: pre_process
          source_enum: 7
          id: background
          ordinal: 3
          stage_enum: 0
          source: script_input
  description: "This weakness expects a string in the form: '<file1> <file2> <data>' where file1 and file2 are files that are used to delay execution, and data is a string containing no spaces.  A non-rentrant signal handler is registered to multiple signals for certian inputs, causing a double free if invoked multiple times in rapid succession. In order to hit the weakness, file1 and file2 must be controlled by runFifo.py (file1 file2), and the data string must begin with a capital letter. In addition a signal must be sent to the process after it creates a file testData/*.pid.\n\n"