code_complexity_features:
  - file_name: /tmp/tmp206W3M_ss_testcase/src-rose/subversion/libsvn_subr/types.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature: SOCKET
    feature_group: source_taint
  - file_name: /tmp/tmp206W3M_ss_testcase/src-rose/subversion/libsvn_subr/types.c
    feature_group: data_type
    function_name: stonesoup_handle_taint
    line_number: 0
    feature: void_pointer
  - file_name: /tmp/tmp206W3M_ss_testcase/src-rose/subversion/libsvn_subr/types.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_flow
    feature: buffer_address_array_index
  - line_number: 0
    feature_group: control_flow
    feature: indirectly_recursive
    file_name: /tmp/tmp206W3M_ss_testcase/src-rose/subversion/libsvn_subr/types.c
    function_name: stonesoup_handle_taint
description: "Creating test case using base program.\nAdded a Socket Server to accept communication from untrusted source.\nCompleted injection.\n"
io_pair:
  exploits:
    - inputs:
        - stage: co_process
          address: ss-localhost
          ordinal: 1
          id: source
          port: 8887
          value: AAAAAAAAAAAAAAA
          source_enum: 5
          stage_enum: 1
          source: socket_input
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
    - inputs:
        - value_type_enum: 0
          source_enum: 5
          port: 8887
          value: Short is now bad
          value_encoding: none
          stage: co_process
          source: socket_input
          id: source
          ordinal: 1
          stage_enum: 1
          value_type: USE_TEXT_DIRECTLY
          address: ss-localhost
  benigns:
    - inputs:
        - source_enum: 5
          stage: co_process
          address: ss-localhost
          id: source
          value_type_enum: 0
          port: 8887
          value: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAAAAAAAAAAAAA
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          source: socket_input
          stage_enum: 1
          ordinal: 1
    - inputs:
        - stage: co_process
          address: ss-localhost
          source: socket_input
          stage_enum: 1
          id: source
          value_encoding: none
          value_type_enum: 0
          value: Hello World!  If this statement isn't more than 64 characters, it will go badly
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          source_enum: 5
          port: 8887
    - inputs:
        - source: socket_input
          stage_enum: 1
          ordinal: 1
          value_type_enum: 0
          address: ss-localhost
          value: Short is good for buffer overflows, unless you make a mistake and get it wrong
          port: 8887
          source_enum: 5
          stage: co_process
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          id: source
  base_inputs:
    - source: socket_input
      source_enum: 5
      stage_enum: 1
      id: source
      ordinal: 1
      address: ss-localhost
      port: 8887
      stage: co_process
  description: "Has a buffer declared on the heap. malloc(64*sizeOf(char)) If input is shorter than 64 it will overflowdue to using improper sizeof and strlen checking\n\n"