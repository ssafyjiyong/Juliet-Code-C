code_complexity_features:
  - file_name: /tmp/tmpOSpKpG_ss_testcase/src-rose/subversion/libsvn_subr/config.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: source_taint
    feature: SOCKET
  - file_name: /tmp/tmpOSpKpG_ss_testcase/src-rose/subversion/libsvn_subr/config.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_type
    feature: simple
  - file_name: /tmp/tmpOSpKpG_ss_testcase/src-rose/subversion/libsvn_subr/config.c
    function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: data_flow
    feature: address_as_linear_expression
  - function_name: stonesoup_handle_taint
    line_number: 0
    feature_group: control_flow
    file_name: /tmp/tmpOSpKpG_ss_testcase/src-rose/subversion/libsvn_subr/config.c
    feature: pointer_to_function
io_pair:
  description: "Read a hex integer from the input.  If hexinteger is negative, ignore.  If hexinteger < 0x0000FFFF, do nothing.  If hexinteger >= 0x0000FFFF try to zero-out the upper two bytes using char pointers.  Perform an incorrect calculation, and rather than zero-ing out the upper two bytes, zero out two different bytes, which corrupts pointers on the stack and results in a seg fault.\n\n"
  exploits:
    - inputs:
        - address: ss-localhost
          source: socket_input
          id: source
          stage: co_process
          stage_enum: 1
          ordinal: 1
          port: 8887
          source_enum: 5
          value: 10000
          value_encoding: none
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
    - inputs:
        - id: source
          address: ss-localhost
          stage: co_process
          stage_enum: 1
          source_enum: 5
          port: 8887
          ordinal: 1
          source: socket_input
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value: FFFFFF
          value_type_enum: 0
  benigns:
    - inputs:
        - stage: co_process
          port: 8887
          value: 10
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          id: source
          ordinal: 1
          address: ss-localhost
          stage_enum: 1
          source_enum: 5
          source: socket_input
    - inputs:
        - value_type: USE_TEXT_DIRECTLY
          stage: co_process
          ordinal: 1
          stage_enum: 1
          value_type_enum: 0
          value_encoding: none
          source: socket_input
          address: ss-localhost
          source_enum: 5
          value: 0
          id: source
          port: 8887
    - inputs:
        - stage: co_process
          stage_enum: 1
          id: source
          address: ss-localhost
          ordinal: 1
          source: socket_input
          port: 8887
          value_encoding: none
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          source_enum: 5
          value: FFFF
  base_inputs:
    - stage_enum: 1
      id: source
      ordinal: 1
      address: ss-localhost
      port: 8887
      source: socket_input
      source_enum: 5
      stage: co_process
description: "Creating test case using base program.\nAdded a Socket Server to accept communication from untrusted source.\nCompleted injection.\n"