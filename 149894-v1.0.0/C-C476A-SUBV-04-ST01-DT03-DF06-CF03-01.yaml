io_pair:
  description: "Reads file name of a csv containing 3, fully quoted, comma separated, columns.Opens file and reads each value and sets it to index in array. If a value isn'tfully quoted program will skip that value and eventually seg fault when dereferencingarray index for printing\n\n"
  base_inputs:
    - source: env_var_input
      source_enum: 2
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      name: JEDDA_COPERIODIC
  benigns:
    - inputs:
        - source_enum: 2
          value: /opt/stonesoup/workspace/testData/good01.csv
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          stage_enum: 0
          name: JEDDA_COPERIODIC
          ordinal: 1
          source: env_var_input
          id: source
          value_encoding: none
        - value_encoding: none
          ordinal: 2
          stage_enum: 0
          source_enum: 3
          source: file_content_input
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value: !<!> "\"this\",\"is\",\"data\""
          stage: pre_process
          name: /opt/stonesoup/workspace/testData/good01.csv
    - inputs:
        - name: JEDDA_COPERIODIC
          source_enum: 2
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          stage: pre_process
          id: source
          stage_enum: 0
          value: /opt/stonesoup/workspace/testData/good02.csv
          value_encoding: none
          value_type_enum: 0
        - ordinal: 2
          stage_enum: 0
          source_enum: 3
          name: /opt/stonesoup/workspace/testData/good02.csv
          value_type: USE_TEXT_DIRECTLY
          value: !<!> "\"hello\",\"world\",\"!!!!\""
          source: file_content_input
          value_encoding: none
          stage: pre_process
          value_type_enum: 0
    - inputs:
        - name: JEDDA_COPERIODIC
          source: env_var_input
          value: /opt/stonesoup/workspace/testData/good03.csv
          id: source
          source_enum: 2
          stage: pre_process
          ordinal: 1
          stage_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          value_type_enum: 0
        - name: /opt/stonesoup/workspace/testData/good03.csv
          ordinal: 2
          value_type_enum: 0
          value_encoding: none
          source_enum: 3
          value_type: USE_TEXT_DIRECTLY
          value: !<!> "\"one\",\"two\",\"three\""
          source: file_content_input
          stage: pre_process
          stage_enum: 0
  exploits:
    - inputs:
        - value_type_enum: 0
          source: env_var_input
          id: source
          source_enum: 2
          ordinal: 1
          stage: pre_process
          value_encoding: none
          value: /opt/stonesoup/workspace/testData/bad01.csv
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          name: JEDDA_COPERIODIC
        - source: file_content_input
          name: /opt/stonesoup/workspace/testData/bad01.csv
          value: !<!> "\"this\",\"is\",data"
          ordinal: 2
          value_encoding: none
          stage: pre_process
          stage_enum: 0
          source_enum: 3
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
    - inputs:
        - source: env_var_input
          stage: pre_process
          stage_enum: 0
          id: source
          value_encoding: none
          source_enum: 2
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          name: JEDDA_COPERIODIC
          value: /opt/stonesoup/workspace/testData/bad02.csv
          value_type_enum: 0
        - value: !<!> "\"malformed values with spaces\",\"because no\",quotes"
          source: file_content_input
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          stage_enum: 0
          ordinal: 2
          source_enum: 3
          name: /opt/stonesoup/workspace/testData/bad02.csv
          stage: pre_process
description: "Creating test case using base program.\nAdded an environment variable read to the function definition.\nCompleted injection.\n"
code_complexity_features:
  - file_name: /tmp/tmpEWVlyx_ss_testcase/src-rose/subversion/libsvn_subr/stream.c
    function_name: svn_stream_set_close
    line_number: 0
    feature: ENVIRONMENT_VARIABLE
    feature_group: source_taint
  - file_name: /tmp/tmpEWVlyx_ss_testcase/src-rose/subversion/libsvn_subr/stream.c
    function_name: svn_stream_set_close
    line_number: 0
    feature: void_pointer
    feature_group: data_type
  - file_name: /tmp/tmpEWVlyx_ss_testcase/src-rose/subversion/libsvn_subr/stream.c
    function_name: svn_stream_set_close
    line_number: 0
    feature_group: data_flow
    feature: address_as_function_return_value
  - file_name: /tmp/tmpEWVlyx_ss_testcase/src-rose/subversion/libsvn_subr/stream.c
    function_name: svn_stream_set_close
    line_number: 0
    feature_group: control_flow
    feature: infinite_loop