description: "Creating test case using base program.\nAdded an environment variable read to get a key in order to read in data from shared memory.\nCompleted injection.\n"
io_pair:
  base_inputs:
    - flags: 950
      source: shared_memory_input
      source_enum: 6
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      key: 8802
      size: 10
  benigns:
    - inputs:
        - value: 10
          value_encoding: none
          key: 8802
          value_type: USE_TEXT_DIRECTLY
          source_enum: 6
          stage: pre_process
          id: source
          ordinal: 1
          flags: 950
          value_type_enum: 0
          source: shared_memory_input
          size: 10
          stage_enum: 0
    - inputs:
        - ordinal: 1
          source_enum: 6
          flags: 950
          stage: pre_process
          id: source
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value: 1000
          value_type_enum: 0
          key: 8802
          source: shared_memory_input
          stage_enum: 0
          size: 10
    - inputs:
        - key: 8802
          id: source
          stage_enum: 0
          size: 10
          value_type: USE_TEXT_DIRECTLY
          ordinal: 1
          source: shared_memory_input
          value: 20
          flags: 950
          source_enum: 6
          stage: pre_process
          value_encoding: none
          value_type_enum: 0
  description: "Read an integer from the input.  If integer >= 4096, do nothing.Else malloc a buffer of 4096 bytes.  Memset the buffer to 'a'. Memset bytes of buffer from input_integer to 4095 to 'b'. Print the buffer.  This all works correctly if the input_integer is 0 or greater.  If input_integer is negative, we will try to memset a random place in memory.  If the input_integer is sufficiently large, this is unaddressable, and we get a segfault.\n\n"
  exploits:
    - inputs:
        - source: shared_memory_input
          key: 8802
          value_type_enum: 0
          stage_enum: 0
          flags: 950
          id: source
          stage: pre_process
          source_enum: 6
          ordinal: 1
          value: -8000000
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          size: 10
    - inputs:
        - value: -16777215
          key: 8802
          flags: 950
          source_enum: 6
          source: shared_memory_input
          stage_enum: 0
          stage: pre_process
          ordinal: 1
          id: source
          size: 10
          value_encoding: none
          value_type_enum: 0
          value_type: USE_TEXT_DIRECTLY
code_complexity_features:
  - line_number: 0
    feature_group: source_taint
    feature: SHARED_MEMORY
    file_name: /tmp/tmpNDrz8R_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: get_xlate_handle_node_internal
  - function_name: get_xlate_handle_node_internal
    line_number: 0
    feature_group: data_type
    feature: struct
    file_name: /tmp/tmpNDrz8R_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
  - file_name: /tmp/tmpNDrz8R_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    function_name: get_xlate_handle_node_internal
    line_number: 0
    feature_group: data_flow
    feature: buffer_address_array_index
  - file_name: /tmp/tmpNDrz8R_ss_testcase/src-rose/subversion/libsvn_subr/utf.c
    feature_group: control_flow
    function_name: get_xlate_handle_node_internal
    line_number: 0
    feature: unconditional_jump