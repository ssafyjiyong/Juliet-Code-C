io_pair:
  benigns:
    - inputs:
        - value_encoding: none
          stage: pre_process
          id: source
          stage_enum: 0
          ordinal: 1
          key: 7064
          source_enum: 6
          value_type_enum: 0
          size: 91
          flags: 950
          value: 0 /opt/stonesoup/workspace/testData/fifo2 /opt/stonesoup/workspace/testData/fifo1 50
          value_type: USE_TEXT_DIRECTLY
          source: shared_memory_input
        - source: script_input
          stage_enum: 0
          source_enum: 7
          name: runFifos.py /opt/stonesoup/workspace/testData/fifo1 /opt/stonesoup/workspace/testData/fifo2
          stage: pre_process
          ordinal: 2
          id: background
    - inputs:
        - flags: 950
          ordinal: 1
          value_type_enum: 0
          value_encoding: none
          id: source
          source_enum: 6
          stage: pre_process
          key: 7064
          source: shared_memory_input
          size: 91
          stage_enum: 0
          value: 12 /opt/stonesoup/workspace/testData/fifo2 /opt/stonesoup/workspace/testData/fifo1 13
          value_type: USE_TEXT_DIRECTLY
        - id: background
          ordinal: 2
          name: runFifos.py /opt/stonesoup/workspace/testData/fifo1 /opt/stonesoup/workspace/testData/fifo2
          source_enum: 7
          stage_enum: 0
          source: script_input
          stage: pre_process
    - inputs:
        - ordinal: 1
          key: 7064
          size: 91
          flags: 950
          value: 1254312 /opt/stonesoup/workspace/testData/file1 /opt/stonesoup/workspace/testData/file2 61
          value_encoding: none
          source: shared_memory_input
          value_type: USE_TEXT_DIRECTLY
          source_enum: 6
          value_type_enum: 0
          stage: pre_process
          stage_enum: 0
          id: source
        - stage_enum: 0
          source_enum: 3
          stage: pre_process
          ordinal: 2
          source: file_content_input
          name: /opt/stonesoup/workspace/testData/file1
        - ordinal: 3
          source: file_content_input
          stage_enum: 0
          name: /opt/stonesoup/workspace/testData/file2
          stage: pre_process
          source_enum: 3
  exploits:
    - inputs:
        - value: 15 /opt/stonesoup/workspace/testData/fifo1 /opt/stonesoup/workspace/testData/fifo2 66
          id: source
          ordinal: 1
          key: 7064
          source: shared_memory_input
          size: 91
          stage: pre_process
          flags: 950
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          value_type_enum: 0
          source_enum: 6
        - stage_enum: 0
          stage: pre_process
          id: background
          ordinal: 2
          name: runFifos.py /opt/stonesoup/workspace/testData/fifo1 /opt/stonesoup/workspace/testData/fifo2
          source: script_input
          source_enum: 7
    - inputs:
        - stage: pre_process
          ordinal: 1
          source_enum: 6
          value_type: USE_TEXT_DIRECTLY
          id: source
          stage_enum: 0
          key: 7064
          value: 74 /opt/stonesoup/workspace/testData/fifo1 /opt/stonesoup/workspace/testData/fifo2 51
          value_type_enum: 0
          source: shared_memory_input
          value_encoding: none
          size: 91
          flags: 950
        - name: runFifos.py /opt/stonesoup/workspace/testData/fifo1 /opt/stonesoup/workspace/testData/fifo2
          stage: pre_process
          id: background
          ordinal: 2
          source: script_input
          source_enum: 7
          stage_enum: 0
  description: "This weakness expects a string in the form: '<qsize> <file1> <file2> <data>' where qsize is the size of the quick sort (used to delay execution in certain benign cases), file1 and file2 are files to be read (also to delay execution), and data is an integer to count up to to exercise the blocking queue that contains the weakness. This weakness uses a singleton pattern to initiate a blocking queue that has the possibility of returning multiple instances of the queue if a thread attempts to initialize the queue while another is thread inside the initializer, but has not yet allocated memory for the queue.\n\n"
  base_inputs:
    - source: shared_memory_input
      source_enum: 6
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      key: 7064
      size: 91
      flags: 950
description: "Creating test case using base program.\nAdded an environment variable read to get a key in order to read in data from shared memory.\nCompleted injection.\n"
code_complexity_features:
  - line_number: 0
    feature_group: source_taint
    feature: SHARED_MEMORY
    file_name: /tmp/tmpeig0Gt_ss_testcase/src-rose/subversion/libsvn_subr/dirent_uri.c
    function_name: internal_style
  - file_name: /tmp/tmpeig0Gt_ss_testcase/src-rose/subversion/libsvn_subr/dirent_uri.c
    function_name: internal_style
    line_number: 0
    feature_group: data_type
    feature: simple
  - file_name: /tmp/tmpeig0Gt_ss_testcase/src-rose/subversion/libsvn_subr/dirent_uri.c
    function_name: internal_style
    line_number: 0
    feature_group: data_flow
    feature: address_alias_1
  - file_name: /tmp/tmpeig0Gt_ss_testcase/src-rose/subversion/libsvn_subr/dirent_uri.c
    function_name: internal_style
    line_number: 0
    feature_group: control_flow
    feature: indirectly_recursive