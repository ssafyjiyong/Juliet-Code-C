io_pair:
  exploits:
    - inputs:
        - key: 3063
          source_enum: 6
          ordinal: 1
          stage: pre_process
          value: 4294967291
          size: 11
          stage_enum: 0
          source: shared_memory_input
          flags: 950
          value_encoding: none
          id: source
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
        - stage_enum: 0
          source_enum: 2
          source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          value: Good_Bye_World
          stage: pre_process
          ordinal: 2
          value_encoding: none
          name: SS_BUFF
    - inputs:
        - ordinal: 1
          source: shared_memory_input
          stage_enum: 0
          stage: pre_process
          size: 11
          value: 2147483650
          flags: 950
          source_enum: 6
          key: 3063
          id: source
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          value_type_enum: 0
        - stage: pre_process
          value_type_enum: 0
          value_encoding: none
          ordinal: 2
          source: env_var_input
          value: aaaaaaaaaaaaaaaaa
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          name: SS_BUFF
          source_enum: 2
  description: "This weakness reads a number to be used as a loop counter. The loop counter is initially read as an unsigned long, then converted to an int.  If the number read in is larger than MAX_UINT, it is silently converted to a negative number.  This breaks the loop counter logic, resulting in an infinite loop. Good inputs:  taint source is 2147483647 or less Bad inputs: taint source is 2147483648 or greater\n\n"
  base_inputs:
    - source: shared_memory_input
      source_enum: 6
      stage: pre_process
      stage_enum: 0
      id: source
      ordinal: 1
      key: 3063
      size: 11
      flags: 950
  benigns:
    - inputs:
        - stage_enum: 0
          stage: pre_process
          value_encoding: none
          value_type: USE_TEXT_DIRECTLY
          value_type_enum: 0
          source: shared_memory_input
          value: 15
          size: 11
          id: source
          source_enum: 6
          ordinal: 1
          key: 3063
          flags: 950
        - source: env_var_input
          value_type: USE_TEXT_DIRECTLY
          stage: pre_process
          name: SS_BUFF
          stage_enum: 0
          value_encoding: none
          source_enum: 2
          value_type_enum: 0
          ordinal: 2
          value: hello
    - inputs:
        - key: 3063
          value_type_enum: 0
          size: 11
          flags: 950
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          stage: pre_process
          source: shared_memory_input
          source_enum: 6
          value: 8
          ordinal: 1
          stage_enum: 0
          id: source
        - value_type_enum: 0
          source_enum: 2
          source: env_var_input
          ordinal: 2
          value: abcdefghiklmnopqrstuvwxyz
          value_type: USE_TEXT_DIRECTLY
          stage_enum: 0
          name: SS_BUFF
          stage: pre_process
          value_encoding: none
    - inputs:
        - stage_enum: 0
          id: source
          key: 3063
          value_type: USE_TEXT_DIRECTLY
          source_enum: 6
          source: shared_memory_input
          flags: 950
          stage: pre_process
          value: 1000
          ordinal: 1
          size: 11
          value_encoding: none
          value_type_enum: 0
        - value_type_enum: 0
          source_enum: 2
          stage_enum: 0
          source: env_var_input
          value: Heeellllloooooo_Wooooorrrrrllllldddddd!!!!!!
          value_type: USE_TEXT_DIRECTLY
          value_encoding: none
          stage: pre_process
          name: SS_BUFF
          ordinal: 2
description: "Creating test case using base program.\nAdded an environment variable read to get a key in order to read in data from shared memory.\nCompleted injection.\n"
code_complexity_features:
  - file_name: /tmp/tmp61vDmP_ss_testcase/src-rose/subversion/libsvn_subr/types.c
    function_name: svn_tristate__from_word
    line_number: 0
    feature_group: source_taint
    feature: SHARED_MEMORY
  - file_name: /tmp/tmp61vDmP_ss_testcase/src-rose/subversion/libsvn_subr/types.c
    function_name: svn_tristate__from_word
    line_number: 0
    feature_group: data_type
    feature: union
  - file_name: /tmp/tmp61vDmP_ss_testcase/src-rose/subversion/libsvn_subr/types.c
    function_name: svn_tristate__from_word
    line_number: 0
    feature_group: data_flow
    feature: address_as_linear_expression
  - function_name: svn_tristate__from_word
    line_number: 0
    feature_group: control_flow
    file_name: /tmp/tmp61vDmP_ss_testcase/src-rose/subversion/libsvn_subr/types.c
    feature: recursive